// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokéService.Data;

#nullable disable

namespace PokéService.Migrations
{
    [DbContext(typeof(PokéServiceContext))]
    [Migration("20240125235909_Protection")]
    partial class Protection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("PokéService.Entities.CardsCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cards")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CardsCollection");
                });

            modelBuilder.Entity("PokéService.Entities.Pokémon", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Effect")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnergyType")
                        .HasColumnType("TEXT");

                    b.Property<string>("EvolveFrom")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Hp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Illustrator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LocalId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RegulationMark")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Retreat")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Set")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SetImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Stage")
                        .HasColumnType("TEXT");

                    b.Property<string>("Suffix")
                        .HasColumnType("TEXT");

                    b.Property<int>("Total")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrainerType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Types")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pokémon");
                });

            modelBuilder.Entity("PokéService.Entities.Pokémon", b =>
                {
                    b.OwnsMany("PokéService.Entities.Ability", "Abilities", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Effect")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PokémonId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("PokémonId");

                            b1.ToTable("Ability");

                            b1.WithOwner()
                                .HasForeignKey("PokémonId");
                        });

                    b.OwnsMany("PokéService.Entities.Attack", "Attacks", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Cost")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Damage")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Effect")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PokémonId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("PokémonId");

                            b1.ToTable("Attack");

                            b1.WithOwner()
                                .HasForeignKey("PokémonId");
                        });

                    b.OwnsOne("PokéService.Entities.Item", "Item", b1 =>
                        {
                            b1.Property<string>("PokémonId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Effect")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("PokémonId");

                            b1.ToTable("Pokémon");

                            b1.WithOwner()
                                .HasForeignKey("PokémonId");
                        });

                    b.OwnsMany("PokéService.Entities.Resistance", "Resistances", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("PokémonId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Value")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("PokémonId");

                            b1.ToTable("Resistance");

                            b1.WithOwner()
                                .HasForeignKey("PokémonId");
                        });

                    b.OwnsMany("PokéService.Entities.Weakness", "Weaknesses", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("PokémonId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Value")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("PokémonId");

                            b1.ToTable("Weakness");

                            b1.WithOwner()
                                .HasForeignKey("PokémonId");
                        });

                    b.Navigation("Abilities");

                    b.Navigation("Attacks");

                    b.Navigation("Item");

                    b.Navigation("Resistances");

                    b.Navigation("Weaknesses");
                });
#pragma warning restore 612, 618
        }
    }
}
