@page "/collect"
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider authStateProvider
@inject PokémonService pokémonService
@using System.Security.Claims
@using Front.Components.Widget
@using PokéService.Entities

<AuthorizeView Roles="User">
    <Authorized>
        <PageTitle>Collection</PageTitle>

        <h1>Collection de @context.User.Identity?.Name</h1>

        <SearchGrid Searcher="Searcher" Addable="false"/>


    </Authorized>
    <NotAuthorized>
        <h1>@Redirect</h1>
    </NotAuthorized>
</AuthorizeView>

@code {

    public string Redirect { // redirect to login page if not logged in
        get {
            NavigationManager.NavigateTo("/login");
            return "Redirection...";
        } 
    }

    public async Task<IEnumerable<Pokémon>?> Searcher(string query)
    {
        pokémonService.SetAuthenticator((CustomAuthenticationStateProvider)authStateProvider); // ensure manual injection of authStateProvider
        return await pokémonService.GetCollection(query);
    }
}