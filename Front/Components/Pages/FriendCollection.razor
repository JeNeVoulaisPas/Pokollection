@page "/friend/{username}"
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider authStateProvider
@inject PokémonService pokémonService
@using System.Security.Claims;
@using Front.Entities;
@using Front.Components.Widget;


@if (username != null)
{
	<PageTitle>Collection de @(username)</PageTitle>

	<div class="titleBanner">
		<img src="images/Collection.png" alt="Collection Image">
	</div>

	<SearchGrid Searcher="Searcher"/>
}
else
{
	<PageTitle>Collection d'Amis</PageTitle>
	<div class="titleBanner">
		<img src="images/Collections.png" alt="Collections Image">
	</div>

	<h1> Découvre les collections de tes amis !!!</h1>

	<InputText @bind-Value="Pseudo" class="form-control" placeholder="Entre le pseudo de tes Amis" />
	@if (Error)
	{
		<div class="alert alert-danger" role="alert">
			Le code Amis n'existe pas !
		</div>
	}

	<button type="button" class="btn btn-primary" @onclick="OnSearch">
		<span class="bi bi-person" aria-hidden="true"></span> Chercher
	</button>
}


@code {
	[Parameter] public string? username { get; set; }

	private string Pseudo { get; set; } = "";

	private bool Error { get; set; }


	public async Task OnSearch()
	{
		Error = false;
		if (await pokémonService.IsExists(Pseudo)) username = Pseudo;
		else Error = true;
	}


    public async Task<IEnumerable<Pokémon>?> Searcher(string query)
    {
        return await pokémonService.GetCollection(query, username);
    }
}