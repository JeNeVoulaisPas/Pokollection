@page "/login"
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject UserService userService
@inject AuthenticationStateProvider authStateProvider
@using Front.Entities;
@using Front.Components.Widget;

<PageTitle>Login</PageTitle>

<link rel="stylesheet" href="style.css" />

<div class="titleBanner">
    <img src="images/Connexion.png" alt="Connection Image">
</div>
<div class="centrer">
    <div class="form-vertical">
        <EditForm Model="@userLogin" OnValidSubmit="HandleLogin">
            <label class="form-label">
                Email ou pseudo
                <input @bind-value="userLogin.UsernameOrEmail" placeholder="Sacha" class="@(String.IsNullOrEmpty(errorMessage) ? "form-control": "form-control is-invalid")"/>
            </label>
            <label class="form-label">
                Email ou pseudo
                <input id="Pwd" @bind-value="userLogin.Pass" type="password" placeholder="Mot de passe" class="@(String.IsNullOrEmpty(errorMessage) ? "form-control": "form-control is-invalid")" />
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div id="PwdFeedback" class="invalid-feedback">
                        @errorMessage
                    </div>
                }
            </label>


            <Captcha></Captcha>

            <button class="btn btn-success" type="submit" disabled="@(String.IsNullOrEmpty(userLogin.UsernameOrEmail) || String.IsNullOrEmpty(userLogin.Pass))">Se connecter</button>
            <button class="btn btn-primary" @onclick="@(() => NavigationManager.NavigateTo("/register"))">S'inscrire</button>

        </EditForm>
    </div>
</div>

@code {
    private UserLogin userLogin = new UserLogin() { UsernameOrEmail = "", Pass = "" };
    private string errorMessage = "";

    private async void HandleLogin()
    {
        var user = await userService.AuthenticateUser(userLogin);
        if (user != null)
        {
            var userClaim = await ((CustomAuthenticationStateProvider)authStateProvider).MarkUserAsAuthenticated(user);

            NavigationManager.NavigateTo("/");
        }
        else errorMessage = "Echec de la connexion, veuillez verifier vos identifiants.";
        StateHasChanged();
    }
}
